!<arch>
0-memset.o/     0           0     0     644     249       `
#include "main.h"

/**
  * _memset - empty function
  * @s: something
  * @b: something else
  * @n: something also
  *
  * Return: returns 0
  */

char *_memset(char *s, char b, unsigned int n)
{
	char *s;
	char b;
	unsigned int n;

	return (0);
}

100-atoi.o/     0           0     0     644     110       `
#include "main.h"

/**
  * _atoi - empty function
  *
  * Return: 0
  */
int _atoi(char *s)
{

	return (0);
}
2-strchr.o/     0           0     0     644     124       `
#include "main.h"

/**
  * _strchr - empty function
  *
  * Return: 0
  */
char *_strchr(char *s, char c)
{

	return (0);
}
2-strlen.o/     0           0     0     644     114       `
#include "main.h"

/**
  * _strlen - empty function
  *
  * Return: 0
  */
int _strlen(char *s)
{

	return (0);
}
2-strncpy.o/    0           0     0     644     139       `
#include "main.h"

/**
  * _strncpy - empty function
  *
  * Return: 0
  */
char *_strncpy(char *dest, char *src, int n)
{

	return (0);
}

3-islower.o/    0           0     0     644     114       `
#include "main.h"

/**
  * _islower - empty function
  *
  * Return: 0
  */
int _islower(int c)
{

	return (0);
}
3-puts.o/       0           0     0     644     111       `
#include "main.h"

/**
  * _puts - empty function
  *
  * Return: 0
  */
void _puts(char *s)
{

	return (0);
}

3-strcmp.o/     0           0     0     644     125       `
#include "main.h"

/**
  * _strcmp - empty function
  *
  * Return: 0
  */
int _strcmp(char *s1, char *s2)
{

	return (0);
}

3-strspn.o/     0           0     0     644     137       `
#include "main.h"

/**
  * _strspn - empty function
  *
  * Return: 0
  */
unsigned int _strspn(char *s, char *accept)
{

	return (0);
}

4-isalpha.o/    0           0     0     644     114       `
#include "main.h"

/**
  * _isalpha - empty function
  *
  * Return: 0
  */
int _isalpha(int c)
{

	return (0);
}
4-strpbrk.o/    0           0     0     644     132       `
#include "main.h"

/**
  * _strpbrk - empty function
  *
  * Return: 0
  */
char *_strpbrk(char *s, char *accept)
{

	return (0);
}
5-strstr.o/     0           0     0     644     137       `
#include "main.h"

/**
  * _strstr - empty function
  *
  * Return: 0
  */
char *_strstr(char *haystack, char *needle)
{

	return (0);
}

6-abs.o/        0           0     0     644     106       `
#include "main.h"

/**
  * _abs - empty function
  *
  * Return: 0
  */
int _abs(int n)
{

	return (0);
}
9-strcpy.o/     0           0     0     644     159       `
#include "main.h"

/**
  * char *_strcpy(char *dest, char *src) - empty function
  *
  * Return: 0
  */
char *_strcpy(char *dest, char *src)
{

	return (0);
}

_putchar.c/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}

0-isupper.o/    0           0     0     644     114       `
#include "main.h"

/**
  * _isupper - empty function
  *
  * Return: 0
  */
int _isupper(int c)
{

	return (0);
}
0-strcat.o/     0           0     0     644     131       `
#include "main.h"

/**
  * _strcat - empty function
  *
  * Return: 0
  */
char *_strcat(char *dest, char *src);
{

	return (0);
}

1-isdigit.o/    0           0     0     644     114       `
#include "main.h"

/**
  * _isdigit - empty function
  *
  * Return: 0
  */
int _isdigit(int c)
{

	return (0);
}
1-memcpy.o/     0           0     0     644     146       `
#include "main.h"

/**
  * _memcpy - empty function
  *
  * Return: 0
  */
char *_memcpy(char *dest, char *src, unsigned int n)
{

	return (0);
}
1-strncat.o/    0           0     0     644     146       `
#include "main.h"

/**
  * _memcpy - empty function
  *
  * Return: 0
  */
char *_memcpy(char *dest, char *src, unsigned int n)
{

	return (0);
}
_putchar.o/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}

main.h/         0           0     0     644     650       `
int _putchar(char c);
int _islower(int c);
int _isalpha(int c);
int _abs(int n);
int _isupper(int c);
int _isdigit(int c);
int _strlen(char *s);
void _puts(char *s);
char *_strcpy(char *dest, char *src);
int _atoi(char *s);
char *_strcat(char *dest, char *src);
char *_strncat(char *dest, char *src, int n);
char *_strncpy(char *dest, char *src, int n);
int _strcmp(char *s1, char *s2);
char *_memset(char *s, char b, unsigned int n);
char *_memcpy(char *dest, char *src, unsigned int n);
char *_strchr(char *s, char c);
unsigned int _strspn(char *s, char *accept);
char *_strpbrk(char *s, char *accept);
char *_strstr(char *haystack, char *needle);
main.c/         0           0     0     644     148       `
#include "main.h"

int main(void)
{
    _puts("\"At the end of the day, my goal was to be the best hacker\"\n\t- Kevin Mitnick");
    return (0);
}
README.md/      0           0     0     644     70        `
this is the templet of the static and the dynamic libraries i created
